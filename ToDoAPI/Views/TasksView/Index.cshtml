
@model IEnumerable<ToDoAPI.Model.Tasks>
@{
    ViewData["Title"] = "Lista de Tarefas";
}

<h2>@ViewData["Title"]</h2>

<!-- Formulário para adicionar nova tarefa -->
<form method="post" class="listaTarefas">
    <div >
        <label for="title">Título:</label>
        <input type="text" id="title" name="NewTask.title" required />
    </div>
    <div>
        <label for="description">Descrição:</label>
        <input type="text" id="description" name="NewTask.description" />
    </div>
    <div>
        <label for="createdDate">Data de Criação:</label>
        <input type="date" id="createdDate" name="NewTask.CreatedDate" required />
    </div>
    <button type="submit">Adicionar Tarefa</button>
</form>
<table class="table">
    <thead>
        <tr>
            <th>Título</th>
            <th>Descrição</th>
            <th>Concluída</th>
            <th>Data de Criação</th>
            <th></th>
        </tr>
    </thead>
    <tbody id="tasksTableBody">
        @foreach (var task in Model)
        {
            <tr>
                <td>@task.title</td>
                <td>@task.description</td>
                <td>@(task.iscompleted.HasValue && task.iscompleted.Value ? "Sim" : "Não")</td>
                <td>@task.CreatedDate.ToString("dd/MM/yyyy")</td>
                <td>
                    <div style="display: flex; justify-content:center">
                        <form id="deleteForm-@task.id" asp-page-handler="Delete">
                            <input type="hidden" name="id" value="@task.id" />
                            <button type="button" class="button-concluir" onclick="concludeTask('@task.id')">Concluir</button>
                        </form>
                        <form id="deleteForm-@task.id" asp-page-handler="Delete">
                            <input type="hidden" name="id" value="@task.id" />
                            <button type="button" class="button-excluir" onclick="deleteTask('@task.id')">Excluir</button>
                        </form>
                     </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<script>
 // Função para adicionar nova tarefa
    document.querySelector("form").addEventListener("submit", async function (event) {
        event.preventDefault();

        const title = document.getElementById("title").value;
        const description = document.getElementById("description").value;
        const createdDate = new Date(document.getElementById("createdDate").value).toISOString();

        const response = await fetch("/api/tasks", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                title,
                description,
                createdDate
            })
        }).then(response => {
            if (response.ok) {
                window.location.reload();
            }
        })

       
        });

    async function deleteTask (taskId){
        const confirmation = confirm("Tem certeza que deseja excluir esta tarefa?");

        if (confirmation) {
            const response = await fetch(`/api/tasks/${taskId}`, {
                method: "DELETE",
                headers: {
                    "Content-Type": "application/json"
                }
            });

            if (response.ok) {
                // Remove a linha da tabela após exclusão bem-sucedida
                const rowToRemove = document.querySelector(`#deleteForm-${taskId}`).closest("tr");
                rowToRemove.remove();
            } else {
                console.error("Erro ao excluir tarefa:", response.statusText);
            }
        }
    }

    async function concludeTask(taskId){
                const response = await fetch(`/api/tasks/${taskId}`, {
            method: "PUT",
            headers: {
                "Content-Type": "application/json"
            }
        });

        if (response.ok) {
            // Atualiza a página após a conclusão bem-sucedida
            window.location.reload();
        } else {
            console.error("Erro ao concluir tarefa:", response.statusText);
        }
    }
    //ao carregar o DOM
    document.addEventListener("DOMContentLoaded", function () {
        const today = new Date().toISOString().split('T')[0];
        document.getElementById("createdDate").value = today;
    });

</script>

<style>

    body {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        font-family: Arial, sans-serif;
        flex-direction:column;
    }


    .table {
        width: 80%;
        border-collapse: collapse;
        margin-top: 20px;
    }
    
    .table th, .table td {
        padding: 12px;
        text-align: center;
        border-bottom: 1px solid #ddd;
    }
    
    .table th {
        background-color: #f2f2f2;
        color: #333;
        font-weight: bold;
    }
    
    .table tbody tr:hover {
        background-color: #f5f5f5;
    }
    
    .button-concluir {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 8px 12px;
        cursor: pointer;
        border-radius: 4px;
        margin-right: 8px; /* Espaçamento entre os botões */
    }

    .button-excluir {
        background-color: #dc3545;
        color: white;
        border: none;
        padding: 8px 12px;
        cursor: pointer;
        border-radius: 4px;
    }

    .button-concluir:hover {
        background-color: #218838;
    }

    .button-excluir:hover {
        background-color: #c82333;
    }

    .listaTarefas{
        display:flex;
        flex-direction:row;
        justify-content:space-around;
        width:80%;
    }
</style>
